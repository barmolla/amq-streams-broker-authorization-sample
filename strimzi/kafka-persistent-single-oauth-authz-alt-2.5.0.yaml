apiVersion: kafka.strimzi.io/v1beta1
kind: Kafka
metadata:
  name: my-cluster
spec:
  kafka:
    version: 2.5.0
    replicas: 1
    listeners:
      plain: {}
      # plain:
      #   authentication:
      #     type: oauth
      #     validIssuerUri: http://keycloak:8080/auth/realms/kafka-authz
      #     jwksEndpointUri: http://keycloak:8080/auth/realms/kafka-authz/protocol/openid-connect/certs
      #     userNameClaim: preferred_username
      #     maxSecondsWithoutReauthentication: 3600
      #     jwksMinRefreshPauseSeconds: 5
      tls:
        authentication:
          type: oauth
          clientId: kafka-broker
          clientSecret:
            key: secret
            secretName: broker-oauth-secret
          validIssuerUri: https://keycloak.keycloak:8443/auth/realms/kafka-authz
          jwksEndpointUri: https://keycloak.keycloak:8443/auth/realms/kafka-authz/protocol/openid-connect/certs
          userNameClaim: preferred_username
          tlsTrustedCertificates:
          - secretName: ca-truststore
            certificate: ca.crt
    authorization:
      type: keycloak
      clientId: kafka
      tokenEndpointUri: https://keycloak.keycloak:8443/auth/realms/kafka-authz/protocol/openid-connect/token
      delegateToKafkaAcls: true
      superUsers:
      - User:service-account-kafka
      - admin
      - CN=admin
      tlsTrustedCertificates:
      - secretName: ca-truststore
        certificate: ca.crt
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      log.message.format.version: "2.5"
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 100Gi
        deleteClaim: false
  zookeeper:
    replicas: 1
    storage:
      type: persistent-claim
      size: 100Gi
      deleteClaim: false
  entityOperator:
    topicOperator: {}
    userOperator: {}
