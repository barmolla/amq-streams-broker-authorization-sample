{
    "realm": "kafka-authz",
    "accessTokenLifespan": 120,
    "ssoSessionIdleTimeout": 864000,
    "ssoSessionMaxLifespan": 864000,
    "enabled": true,
    "sslRequired": "external",
    "roles": {
      "realm": [
      ],
      "client": {
        "kafka-cli": [],
        "kafka": [
          {
            "name": "uma_protection",
            "clientRole": true
          }
        ]
      }
    },
    "groups" : [
    ],
    "users": [
      {
        "id": "223437e4-6ed9-4b2e-84a3-c780ca5fe319",
        "createdTimestamp": 1595541053426,
        "username": "service-account-kafka-broker",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "kafka-broker",
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "notBefore": 0
      }
    ],
    "clients": [
      {
        "id": "38234699-5695-46a9-99d8-678de8662220",
        "clientId": "kafka-broker",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "kafka-broker-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "access.token.lifespan": "604800",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "fb6cb0f0-2705-4caa-90be-515eabe9d87a",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1efa7371-f45b-438f-8bac-99968f8b06f6",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e9c6dce8-0f1b-45ab-abd9-0d30b4eed615",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },     
      {
        "clientId": "kafka",
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "secret": "kafka-secret",
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "authorizationServicesEnabled": true,
        "publicClient": false,
        "fullScopeAllowed": true,
        "authorizationSettings": {
          "allowRemoteResourceManagement": true,
          "policyEnforcementMode": "ENFORCING",
          "resources": [
            {
              "name": "Topic:a_*",
              "type": "Topic",
              "ownerManagedAccess": false,
              "displayName": "Topics that start with a_",
              "attributes": {},
              "uris": [],
              "scopes": [
                {
                  "name": "Create"
                },
                {
                  "name": "Delete"
                },
                {
                  "name": "Describe"
                },
                {
                  "name": "Write"
                },
                {
                  "name": "Read"
                },
                {
                  "name": "Alter"
                },
                {
                  "name": "DescribeConfigs"
                },
                {
                  "name": "AlterConfigs"
                }
              ]
            },
            {
              "name": "Group:x_*",
              "type": "Group",
              "ownerManagedAccess": false,
              "displayName": "Consumer groups that start with x_",
              "attributes": {},
              "uris": [],
              "scopes": [
                {
                  "name": "Describe"
                },
                {
                  "name": "Delete"
                },
                {
                  "name": "Read"
                }
              ]
            },
            {
              "name": "Topic:x_*",
              "type": "Topic",
              "ownerManagedAccess": false,
              "displayName": "Topics that start with x_",
              "attributes": {},
              "uris": [],
              "scopes": [
                {
                  "name": "Create"
                },
                {
                  "name": "Describe"
                },
                {
                  "name": "Delete"
                },
                {
                  "name": "Write"
                },
                {
                  "name": "Read"
                },
                {
                  "name": "Alter"
                },
                {
                  "name": "DescribeConfigs"
                },
                {
                  "name": "AlterConfigs"
                }
              ]
            },
            {
              "name": "Group:a_*",
              "type": "Group",
              "ownerManagedAccess": false,
              "displayName": "Groups that start with a_",
              "attributes": {},
              "uris": [],
              "scopes": [
                {
                  "name": "Describe"
                },
                {
                  "name": "Read"
                }
              ]
            },
            {
              "name": "Group:*",
              "type": "Group",
              "ownerManagedAccess": false,
              "displayName": "Any group",
              "attributes": {},
              "uris": [],
              "scopes": [
                {
                  "name": "Describe"
                },
                {
                  "name": "Read"
                },
                {
                  "name": "DescribeConfigs"
                },
                {
                  "name": "AlterConfigs"
                }
              ]
            },
            {
              "name": "Topic:*",
              "type": "Topic",
              "ownerManagedAccess": false,
              "displayName": "Any topic",
              "attributes": {},
              "uris": [],
              "scopes": [
                {
                  "name": "Create"
                },
                {
                  "name": "Delete"
                },
                {
                  "name": "Describe"
                },
                {
                  "name": "Write"
                },
                {
                  "name": "Read"
                },
                {
                  "name": "Alter"
                },
                {
                  "name": "DescribeConfigs"
                },
                {
                  "name": "AlterConfigs"
                }
              ]
            },
            {
              "name": "kafka-cluster:cluster2,Topic:b_*",
              "type": "Topic",
              "ownerManagedAccess": false,
              "attributes": {},
              "uris": [],
              "scopes": [
                {
                  "name": "Create"
                },
                {
                  "name": "Delete"
                },
                {
                  "name": "Describe"
                },
                {
                  "name": "Write"
                },
                {
                  "name": "Read"
                },
                {
                  "name": "Alter"
                },
                {
                  "name": "DescribeConfigs"
                },
                {
                  "name": "AlterConfigs"
                }
              ]
            },
            {
              "name": "kafka-cluster:cluster2,Cluster:*",
              "type": "Cluster",
              "ownerManagedAccess": false,
              "displayName": "Cluster scope on cluster2",
              "attributes": {},
              "uris": [],
              "scopes": [
                {
                  "name": "DescribeConfigs"
                },
                {
                  "name": "AlterConfigs"
                },
                {
                  "name": "ClusterAction"
                }
              ]
            },
            {
              "name": "kafka-cluster:cluster2,Group:*",
              "type": "Group",
              "ownerManagedAccess": false,
              "displayName": "Any group on cluster2",
              "attributes": {},
              "uris": [],
              "scopes": [
                {
                  "name": "Delete"
                },
                {
                  "name": "Describe"
                },
                {
                  "name": "Read"
                },
                {
                  "name": "DescribeConfigs"
                },
                {
                  "name": "AlterConfigs"
                }
              ]
            },
            {
              "name": "kafka-cluster:cluster2,Topic:*",
              "type": "Topic",
              "ownerManagedAccess": false,
              "displayName": "Any topic on cluster2",
              "attributes": {},
              "uris": [],
              "scopes": [
                {
                  "name": "Create"
                },
                {
                  "name": "Delete"
                },
                {
                  "name": "Describe"
                },
                {
                  "name": "Write"
                },
                {
                  "name": "IdempotentWrite"
                },
                {
                  "name": "Read"
                },
                {
                  "name": "Alter"
                },
                {
                  "name": "DescribeConfigs"
                },
                {
                  "name": "AlterConfigs"
                }
              ]
            },
            {
              "name" : "Cluster:*",
              "type" : "Cluster",
              "ownerManagedAccess" : false,
              "attributes" : { },
              "uris" : [ ]
            }
          ],
          "policies": [
            {
              "name": "Default Policy",
              "description": "A policy that grants access only for users within this realm",
              "type": "js",
              "logic": "POSITIVE",
              "decisionStrategy": "AFFIRMATIVE",
              "config": {
                "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
              }
            }
          ],
          "scopes": [
            {
              "name": "Create"
            },
            {
              "name": "Read"
            },
            {
              "name": "Write"
            },
            {
              "name": "Delete"
            },
            {
              "name": "Alter"
            },
            {
              "name": "Describe"
            },
            {
              "name": "ClusterAction"
            },
            {
              "name": "DescribeConfigs"
            },
            {
              "name": "AlterConfigs"
            },
            {
              "name": "IdempotentWrite"
            }
          ],
          "decisionStrategy": "AFFIRMATIVE"
        }
      },
      {
        "clientId": "kafka-cli",
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "secret": "kafka-cli-secret",
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "fullScopeAllowed": true
      }
    ]
  }
  